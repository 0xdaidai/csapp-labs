# Executions begins at address 0
    .pos 0 
    irmovq stack,%rsp # stack point
    call main
    halt

    .align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333

main:
    irmovq src,%rdi
    irmovq dest,%rsi
    irmovq $3,%rdx   
    call copy_block
    ret

copy_block:
    pushq %r8
    pushq %r9
    pushq %rbx
    irmovq $8,%r8
    irmovq $1,%r9
    xorq %rax,%rax
    andq %rdx,%rdx  # Set CC
    jmp test
loop:
    mrmovq (%rdi),%rbx
    xorq %rbx,%rax  # res ^= val
    rmmovq %rbx,(%rsi)
    addq %r8,%rdi   # src++
    addq %r8,%rsi   # dest++
    subq %r9,%rdx   # len--
test:
    jne loop
    popq %rbx
    popq %r9
    popq %r8
    ret

    .pos 0x200
stack:
